{
  "version": 3,
  "sources": ["../../vuetify/src/components/VMenu/VMenu.tsx", "../../vuetify/src/components/VOverlay/VOverlay.tsx", "../../vuetify/src/composables/delay.ts", "../../vuetify/src/components/VMenu/shared.ts", "../../vuetify/src/components/VOverlay/useActivator.tsx", "../../vuetify/src/composables/lazy.ts", "../../vuetify/src/components/VOverlay/util/point.ts", "../../vuetify/src/components/VOverlay/locationStrategies.ts", "../../vuetify/src/components/VOverlay/requestNewFrame.ts", "../../vuetify/src/components/VOverlay/scrollStrategies.ts", "../../vuetify/src/composables/hydration.ts", "../../vuetify/src/composables/stack.ts", "../../vuetify/src/composables/teleport.ts", "../../vuetify/src/directives/click-outside/index.ts", "../../vuetify/src/composables/forwardRefs.ts", "../../vuetify/src/composables/scopeId.ts"],
  "sourcesContent": ["// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport { computed, inject, mergeProps, provide, ref, watch } from 'vue'\nimport { genericComponent, getUid, omit, useRender } from '@/util'\nimport { filterVOverlayProps, makeVOverlayProps } from '@/components/VOverlay/VOverlay'\nimport { VMenuSymbol } from './shared'\n\n// Types\nimport type { SlotsToProps } from '@/util'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const VMenu = genericComponent<new () => {\n  $props: SlotsToProps<OverlaySlots>\n}>()({\n  name: 'VMenu',\n\n  props: {\n    // TODO\n    // disableKeys: Boolean,\n    id: String,\n\n    ...omit(makeVOverlayProps({\n      closeDelay: 250,\n      closeOnContentClick: true,\n      locationStrategy: 'connected' as const,\n      openDelay: 300,\n      scrim: false,\n      scrollStrategy: 'reposition' as const,\n      transition: { component: VDialogTransition },\n    }), ['absolute']),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    let openChildren = 0\n    provide(VMenuSymbol, {\n      register () {\n        ++openChildren\n      },\n      unregister () {\n        --openChildren\n      },\n      closeParents () {\n        setTimeout(() => {\n          if (!openChildren) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    watch(isActive, val => {\n      val ? parent?.register() : parent?.unregister()\n    })\n\n    function onClickOutside () {\n      parent?.closeParents()\n    }\n\n    useRender(() => {\n      const [overlayProps] = filterVOverlayProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          class={[\n            'v-menu',\n          ]}\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ mergeProps({\n            'aria-haspopup': 'menu',\n            'aria-expanded': String(isActive.value),\n            'aria-owns': id.value,\n          }, props.activatorProps) }\n          onClick:outside={ onClickOutside }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root>\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n", "// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeActivatorProps, useActivator } from './useActivator'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { makeLocationStrategyProps, useLocationStrategies } from './locationStrategies'\nimport { makeScrollStrategyProps, useScrollStrategies } from './scrollStrategies'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackButton, useRouter } from '@/composables/router'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useHydration } from '@/composables/hydration'\nimport { useRtl } from '@/composables/locale'\nimport { useStack } from '@/composables/stack'\nimport { useTeleport } from '@/composables/teleport'\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport {\n  animate,\n  convertToUnit,\n  genericComponent,\n  getScrollParent,\n  IN_BROWSER,\n  pick,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\nimport {\n  computed,\n  mergeProps,\n  ref,\n  Teleport,\n  toHandlers,\n  toRef,\n  Transition,\n  watch,\n} from 'vue'\n\n// Types\nimport type { BackgroundColorData } from '@/composables/color'\nimport type { MakeSlots, SlotsToProps } from '@/util'\nimport type { ExtractPropTypes, PropType, Ref } from 'vue'\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\nexport type OverlaySlots = MakeSlots<{\n  default: [{ isActive: Ref<boolean> }]\n  activator: [{ isActive: boolean, props: Record<string, any> }]\n}>\n\nexport const makeVOverlayProps = propsFactory({\n  absolute: Boolean,\n  attach: [Boolean, String, Object] as PropType<boolean | string | Element>,\n  closeOnBack: {\n    type: Boolean,\n    default: true,\n  },\n  contained: Boolean,\n  contentClass: null,\n  contentProps: null,\n  disabled: Boolean,\n  noClickAnimation: Boolean,\n  modelValue: Boolean,\n  persistent: Boolean,\n  scrim: {\n    type: [String, Boolean],\n    default: true,\n  },\n  zIndex: {\n    type: [Number, String],\n    default: 2000,\n  },\n\n  ...makeActivatorProps(),\n  ...makeDimensionProps(),\n  ...makeLazyProps(),\n  ...makeLocationStrategyProps(),\n  ...makeScrollStrategyProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps(),\n}, 'v-overlay')\n\nexport const VOverlay = genericComponent<new () => {\n  $props: SlotsToProps<OverlaySlots>\n}>()({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: makeVOverlayProps(),\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    afterLeave: () => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const isActive = computed({\n      get: () => model.value,\n      set: v => {\n        if (!(v && props.disabled)) model.value = v\n      },\n    })\n    const { teleportTarget } = useTeleport(computed(() => props.attach || props.contained))\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses, isRtl } = useRtl()\n    const { hasContent, onAfterLeave } = useLazy(props, isActive)\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const { globalTop, localTop, stackStyles } = useStack(isActive, toRef(props, 'zIndex'))\n    const { activatorEl, activatorRef, activatorEvents, contentEvents, scrimEvents } = useActivator(props, { isActive, isTop: localTop })\n    const { dimensionStyles } = useDimension(props)\n    const isMounted = useHydration()\n\n    watch(() => props.disabled, v => {\n      if (v) isActive.value = false\n    })\n\n    const root = ref<HTMLElement>()\n    const contentEl = ref<HTMLElement>()\n    const { contentStyles, updateLocation } = useLocationStrategies(props, {\n      isRtl,\n      contentEl,\n      activatorEl,\n      isActive,\n    })\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      activatorEl,\n      isActive,\n      updateLocation,\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional () {\n      return isActive.value && globalTop.value\n    }\n\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown)\n      } else {\n        window.removeEventListener('keydown', onKeydown)\n      }\n    }, { immediate: true })\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape' && globalTop.value) {\n        if (!props.persistent) {\n          isActive.value = false\n        } else animateClick()\n      }\n    }\n\n    const router = useRouter()\n    useToggleScope(() => props.closeOnBack, () => {\n      useBackButton(router, next => {\n        if (globalTop.value && isActive.value) {\n          next(false)\n          if (!props.persistent) isActive.value = false\n          else animateClick()\n        } else {\n          next()\n        }\n      })\n    })\n\n    const top = ref<number>()\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      contentEl.value && animate(contentEl.value, [\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          props: mergeProps({\n            ref: activatorRef,\n          }, toHandlers(activatorEvents.value), props.activatorProps),\n        }) }\n\n        { isMounted.value && (\n          <Teleport\n            disabled={ !teleportTarget.value }\n            to={ teleportTarget.value }\n          >\n            { hasContent.value && (\n              <div\n                class={[\n                  'v-overlay',\n                  {\n                    'v-overlay--absolute': props.absolute || props.contained,\n                    'v-overlay--active': isActive.value,\n                    'v-overlay--contained': props.contained,\n                  },\n                  themeClasses.value,\n                  rtlClasses.value,\n                ]}\n                style={[stackStyles.value, { top: convertToUnit(top.value) }]}\n                ref={ root }\n                {...attrs}\n              >\n                <Scrim\n                  color={ scrimColor }\n                  modelValue={ isActive.value && !!props.scrim }\n                  { ...toHandlers(scrimEvents.value) }\n                />\n                <MaybeTransition\n                  appear\n                  persisted\n                  transition={ props.transition }\n                  target={ activatorEl.value }\n                  onAfterLeave={() => { onAfterLeave(); emit('afterLeave') }}\n                >\n                  <div\n                    ref={ contentEl }\n                    v-show={ isActive.value }\n                    v-click-outside={{ handler: onClickOutside, closeConditional, include: () => [activatorEl.value] }}\n                    class={[\n                      'v-overlay__content',\n                      props.contentClass,\n                    ]}\n                    style={[\n                      dimensionStyles.value,\n                      contentStyles.value,\n                    ]}\n                    { ...toHandlers(contentEvents.value) }\n                    { ...props.contentProps }\n                  >\n                    { slots.default?.({ isActive }) }\n                  </div>\n                </MaybeTransition>\n              </div>\n            )}\n          </Teleport>\n        )}\n      </>\n    ))\n\n    return {\n      activatorEl,\n      animateClick,\n      contentEl,\n      globalTop,\n      localTop,\n      updateLocation,\n    }\n  },\n})\n\nexport type VOverlay = InstanceType<typeof VOverlay>\n\nexport function filterVOverlayProps (props: Partial<ExtractPropTypes<ReturnType<typeof makeVOverlayProps>>>) {\n  return pick(props, Object.keys(VOverlay.props) as any)\n}\n", "// Utilities\nimport { IN_BROWSER, propsFactory } from '@/util'\n\n// Types\nexport interface DelayProps {\n  closeDelay?: number | string\n  openDelay?: number | string\n}\n\n// Composables\nexport const makeDelayProps = propsFactory({\n  closeDelay: [Number, String],\n  openDelay: [Number, String],\n}, 'delay')\n\nexport function useDelay (props: DelayProps, cb?: (value: boolean) => void) {\n  const delays: Partial<Record<keyof DelayProps, number>> = {}\n  const runDelayFactory = (prop: keyof DelayProps) => (): Promise<boolean> => {\n    // istanbul ignore next\n    if (!IN_BROWSER) return Promise.resolve(true)\n\n    const active = prop === 'openDelay'\n\n    delays.closeDelay && window.clearTimeout(delays.closeDelay)\n    delete delays.closeDelay\n\n    delays.openDelay && window.clearTimeout(delays.openDelay)\n    delete delays.openDelay\n\n    return new Promise(resolve => {\n      const delay = parseInt(props[prop] ?? 0, 10)\n\n      delays[prop] = window.setTimeout(() => {\n        cb?.(active)\n        resolve(active)\n      }, delay)\n    })\n  }\n\n  return {\n    runCloseDelay: runDelayFactory('closeDelay'),\n    runOpenDelay: runDelayFactory('openDelay'),\n  }\n}\n", "import type { InjectionKey } from 'vue'\n\ninterface MenuProvide {\n  register (): void\n  unregister (): void\n  closeParents (): void\n}\n\nexport const VMenuSymbol: InjectionKey<MenuProvide> = Symbol.for('vuetify:v-menu')\n", "// Composables\nimport { makeDelayProps, useDelay } from '@/composables/delay'\nimport { VMenuSymbol } from '@/components/VMenu/shared'\n\n// Utilities\nimport { getCurrentInstance, IN_BROWSER, isComponentInstance, propsFactory, SUPPORTS_FOCUS_VISIBLE } from '@/util'\nimport {\n  computed,\n  effectScope,\n  inject,\n  nextTick,\n  onScopeDispose,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\n\n// Types\nimport type { DelayProps } from '@/composables/delay'\nimport type {\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n  EffectScope,\n  PropType,\n  Ref,\n} from 'vue'\n\ninterface ActivatorProps extends DelayProps {\n  activator?: 'parent' | string | Element | ComponentPublicInstance\n  activatorProps: Record<string, any>\n\n  openOnClick: boolean | undefined\n  openOnHover: boolean\n  openOnFocus: boolean | undefined\n\n  closeOnContentClick: boolean\n}\n\nexport const makeActivatorProps = propsFactory({\n  activator: [String, Object] as PropType<ActivatorProps['activator']>,\n  activatorProps: {\n    type: Object as PropType<ActivatorProps['activatorProps']>,\n    default: () => ({}),\n  },\n\n  openOnClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined,\n  },\n\n  closeOnContentClick: Boolean,\n\n  ...makeDelayProps(),\n}, 'v-overlay-activator')\n\nexport function useActivator (\n  props: ActivatorProps,\n  { isActive, isTop }: { isActive: Ref<boolean>, isTop: Ref<boolean> }\n) {\n  const activatorEl = ref<HTMLElement>()\n\n  let isHovered = false\n  let isFocused = false\n  let firstEnter = true\n\n  const openOnFocus = computed(() => props.openOnFocus || (props.openOnFocus == null && props.openOnHover))\n  const openOnClick = computed(() => props.openOnClick || (props.openOnClick == null && !props.openOnHover && !openOnFocus.value))\n\n  const { runOpenDelay, runCloseDelay } = useDelay(props, value => {\n    if (\n      value === (\n        (props.openOnHover && isHovered) ||\n        (openOnFocus.value && isFocused)\n      ) && !(props.openOnHover && isActive.value && !isTop.value)\n    ) {\n      if (isActive.value !== value) {\n        firstEnter = true\n      }\n      isActive.value = value\n    }\n  })\n\n  const availableEvents = {\n    click: (e: MouseEvent) => {\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      isActive.value = !isActive.value\n    },\n    mouseenter: (e: MouseEvent) => {\n      isHovered = true\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n      runOpenDelay()\n    },\n    mouseleave: (e: MouseEvent) => {\n      isHovered = false\n      runCloseDelay()\n    },\n    focus: (e: FocusEvent) => {\n      if (\n        SUPPORTS_FOCUS_VISIBLE &&\n        !(e.target as HTMLElement).matches(':focus-visible')\n      ) return\n\n      isFocused = true\n      e.stopPropagation()\n      activatorEl.value = (e.currentTarget || e.target) as HTMLElement\n\n      runOpenDelay()\n    },\n    blur: (e: FocusEvent) => {\n      isFocused = false\n      e.stopPropagation()\n\n      runCloseDelay()\n    },\n  }\n\n  const activatorEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (openOnClick.value) {\n      events.click = availableEvents.click\n    }\n    if (props.openOnHover) {\n      events.mouseenter = availableEvents.mouseenter\n      events.mouseleave = availableEvents.mouseleave\n    }\n    if (openOnFocus.value) {\n      events.focus = availableEvents.focus\n      events.blur = availableEvents.blur\n    }\n\n    return events\n  })\n\n  const contentEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        isHovered = true\n        runOpenDelay()\n      }\n      events.mouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null)\n      events.click = () => {\n        isActive.value = false\n        menu?.closeParents()\n      }\n    }\n\n    return events\n  })\n\n  const scrimEvents = computed(() => {\n    const events: Partial<typeof availableEvents> = {}\n    if (props.openOnHover) {\n      events.mouseenter = () => {\n        if (firstEnter) {\n          isHovered = true\n          firstEnter = false\n          runOpenDelay()\n        }\n      }\n      events.mouseleave = () => {\n        isHovered = false\n        runCloseDelay()\n      }\n    }\n\n    return events\n  })\n\n  watch(isTop, val => {\n    if (val && (\n      (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused)) ||\n      (openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))\n    )) {\n      isActive.value = false\n    }\n  })\n\n  const activatorRef = ref()\n  watchEffect(() => {\n    if (!activatorRef.value) return\n\n    nextTick(() => {\n      const activator = activatorRef.value\n      activatorEl.value = isComponentInstance(activator) ? activator.$el : activator\n    })\n  })\n\n  const vm = getCurrentInstance('useActivator')\n  let scope: EffectScope\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope()\n      scope.run(() => {\n        _useActivator(props, vm, { activatorEl, activatorEvents })\n      })\n    } else if (scope) {\n      scope.stop()\n    }\n  }, { flush: 'post', immediate: true })\n\n  onScopeDispose(() => {\n    scope?.stop()\n  })\n\n  return { activatorEl, activatorRef, activatorEvents, contentEvents, scrimEvents }\n}\n\nfunction _useActivator (\n  props: ActivatorProps,\n  vm: ComponentInternalInstance,\n  { activatorEl, activatorEvents }: Pick<ReturnType<typeof useActivator>, 'activatorEl' | 'activatorEvents'>\n) {\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal)\n      activator && unbindActivatorProps(activator)\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps())\n    }\n  }, { immediate: true })\n\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps()\n  })\n\n  onScopeDispose(() => {\n    unbindActivatorProps()\n  })\n\n  function bindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.addEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      if (_props[k] == null) {\n        el.removeAttribute(k)\n      } else {\n        el.setAttribute(k, _props[k])\n      }\n    })\n  }\n\n  function unbindActivatorProps (el = getActivator(), _props = props.activatorProps) {\n    if (!el) return\n\n    Object.entries(activatorEvents.value).forEach(([name, cb]) => {\n      el.removeEventListener(name, cb as (e: Event) => void)\n    })\n\n    Object.keys(_props).forEach(k => {\n      el.removeAttribute(k)\n    })\n  }\n\n  function getActivator (selector = props.activator): HTMLElement | undefined {\n    let activator\n    if (selector) {\n      if (selector === 'parent') {\n        let el = vm?.proxy?.$el?.parentNode\n        while (el.hasAttribute('data-no-activator')) {\n          el = el.parentNode\n        }\n        activator = el\n      } else if (typeof selector === 'string') {\n        // Selector\n        activator = document.querySelector(selector)\n      } else if ('$el' in selector) {\n        // Component (ref)\n        activator = selector.$el\n      } else {\n        // HTMLElement | Element\n        activator = selector\n      }\n    }\n\n    // The activator should only be a valid element (Ignore comments and text nodes)\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n    return activatorEl.value\n  }\n}\n", "// Utilities\nimport { computed, ref, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport { propsFactory } from '@/util'\n\nexport const makeLazyProps = propsFactory({\n  eager: Boolean,\n}, 'lazy')\n\nexport function useLazy (props: { eager: boolean }, active: Ref<boolean>) {\n  const isBooted = ref(false)\n  const hasContent = computed(() => isBooted.value || props.eager || active.value)\n\n  watch(active, () => isBooted.value = true)\n\n  function onAfterLeave () {\n    if (!props.eager) isBooted.value = false\n  }\n\n  return { isBooted, hasContent, onAfterLeave }\n}\n", "import type { ParsedAnchor } from '@/util'\nimport type { Box } from '@/util/box'\n\ntype Point = { x: number, y: number }\ndeclare class As<T extends string> {\n  private as: T\n}\ntype ElementPoint = Point & As<'element'>\ntype ViewportPoint = Point & As<'viewport'>\ntype Offset = Point & As<'offset'>\n\n/** Convert a point in local space to viewport space */\nexport function elementToViewport (point: ElementPoint, offset: Offset | Box) {\n  return {\n    x: point.x + offset.x,\n    y: point.y + offset.y,\n  } as ViewportPoint\n}\n\n/** Convert a point in viewport space to local space */\nexport function viewportToElement (point: ViewportPoint, offset: Offset | Box) {\n  return {\n    x: point.x - offset.x,\n    y: point.y - offset.y,\n  } as ElementPoint\n}\n\n/** Get the difference between two points */\nexport function getOffset<T extends Point> (a: T, b: T) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y,\n  } as Offset\n}\n\n/** Convert an anchor object to a point in local space */\nexport function anchorToPoint (anchor: ParsedAnchor, box: Box): ViewportPoint {\n  if (anchor.side === 'top' || anchor.side === 'bottom') {\n    const { side, align } = anchor\n\n    const x: number =\n      align === 'left' ? 0\n      : align === 'center' ? box.width / 2\n      : align === 'right' ? box.width\n      : align\n    const y: number =\n      side === 'top' ? 0\n      : side === 'bottom' ? box.height\n      : side\n\n    return elementToViewport({ x, y } as ElementPoint, box)\n  } else if (anchor.side === 'left' || anchor.side === 'right') {\n    const { side, align } = anchor\n\n    const x: number =\n      side === 'left' ? 0\n      : side === 'right' ? box.width\n      : side\n    const y: number =\n      align === 'top' ? 0\n      : align === 'center' ? box.height / 2\n      : align === 'bottom' ? box.height\n      : align\n\n    return elementToViewport({ x, y } as ElementPoint, box)\n  }\n\n  return elementToViewport({\n    x: box.width / 2,\n    y: box.height / 2,\n  } as ElementPoint, box)\n}\n", "// Utilities\nimport { computed, effectScope, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue'\nimport {\n  clamp,\n  consoleError,\n  convertToUnit,\n  destructComputed,\n  flipAlign,\n  flipCorner,\n  flipSide,\n  getAxis,\n  getScrollParents,\n  IN_BROWSER,\n  isFixedPosition,\n  nullifyTransforms,\n  parseAnchor,\n  propsFactory,\n} from '@/util'\nimport { Box, getOverflow } from '@/util/box'\nimport { anchorToPoint, getOffset } from './util/point'\n\n// Types\nimport type { EffectScope, PropType, Ref } from 'vue'\nimport type { Anchor } from '@/util'\n\nexport interface LocationStrategyData {\n  contentEl: Ref<HTMLElement | undefined>\n  activatorEl: Ref<HTMLElement | undefined>\n  isActive: Ref<boolean>\n  isRtl: Ref<boolean>\n}\n\ntype LocationStrategyFn = (\n  data: LocationStrategyData,\n  props: StrategyProps,\n  contentStyles: Ref<Record<string, string>>\n) => undefined | { updateLocation: (e: Event) => void }\n\nconst locationStrategies = {\n  static: staticLocationStrategy, // specific viewport position, usually centered\n  connected: connectedLocationStrategy, // connected to a certain element\n}\n\nexport interface StrategyProps {\n  locationStrategy: keyof typeof locationStrategies | LocationStrategyFn\n  location: Anchor\n  origin: Anchor | 'auto' | 'overlap'\n  offset?: number | string | number[]\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n}\n\nexport const makeLocationStrategyProps = propsFactory({\n  locationStrategy: {\n    type: [String, Function] as PropType<StrategyProps['locationStrategy']>,\n    default: 'static',\n    validator: (val: any) => typeof val === 'function' || val in locationStrategies,\n  },\n  location: {\n    type: String as PropType<StrategyProps['location']>,\n    default: 'bottom',\n  },\n  origin: {\n    type: String as PropType<StrategyProps['origin']>,\n    default: 'auto',\n  },\n  offset: [Number, String, Array] as PropType<StrategyProps['offset']>,\n}, 'v-overlay-location-strategies')\n\nexport function useLocationStrategies (\n  props: StrategyProps,\n  data: LocationStrategyData\n) {\n  const contentStyles = ref({})\n  const updateLocation = ref<(e: Event) => void>()\n\n  let scope: EffectScope | undefined\n  watchEffect(async () => {\n    scope?.stop()\n    updateLocation.value = undefined\n\n    if (!(IN_BROWSER && data.isActive.value && props.locationStrategy)) return\n\n    scope = effectScope()\n    if (!(props.locationStrategy === 'connected')) { await nextTick() }\n    scope.run(() => {\n      if (typeof props.locationStrategy === 'function') {\n        updateLocation.value = props.locationStrategy(data, props, contentStyles)?.updateLocation\n      } else {\n        updateLocation.value = locationStrategies[props.locationStrategy](data, props, contentStyles)?.updateLocation\n      }\n    })\n  })\n\n  IN_BROWSER && window.addEventListener('resize', onResize, { passive: true })\n\n  onScopeDispose(() => {\n    IN_BROWSER && window.removeEventListener('resize', onResize)\n    updateLocation.value = undefined\n    scope?.stop()\n  })\n\n  function onResize (e: Event) {\n    updateLocation.value?.(e)\n  }\n\n  return {\n    contentStyles,\n    updateLocation,\n  }\n}\n\nfunction staticLocationStrategy () {\n  // TODO\n}\n\n/** Get size of element ignoring max-width/max-height */\nfunction getIntrinsicSize (el: HTMLElement) {\n  // const scrollables = new Map<Element, [number, number]>()\n  // el.querySelectorAll('*').forEach(el => {\n  //   const x = el.scrollLeft\n  //   const y = el.scrollTop\n  //   if (x || y) {\n  //     scrollables.set(el, [x, y])\n  //   }\n  // })\n\n  // const initialMaxWidth = el.style.maxWidth\n  // const initialMaxHeight = el.style.maxHeight\n  // el.style.removeProperty('max-width')\n  // el.style.removeProperty('max-height')\n\n  /* eslint-disable-next-line sonarjs/prefer-immediate-return */\n  const contentBox = nullifyTransforms(el)\n\n  contentBox.x -= parseFloat(el.style.left || 0)\n  contentBox.y -= parseFloat(el.style.top || 0)\n\n  // el.style.maxWidth = initialMaxWidth\n  // el.style.maxHeight = initialMaxHeight\n  // scrollables.forEach((position, el) => {\n  //   el.scrollTo(...position)\n  // })\n\n  return contentBox\n}\n\nfunction connectedLocationStrategy (data: LocationStrategyData, props: StrategyProps, contentStyles: Ref<Record<string, string>>) {\n  const activatorFixed = isFixedPosition(data.activatorEl.value)\n  if (activatorFixed) {\n    Object.assign(contentStyles.value, {\n      position: 'fixed',\n    })\n  }\n\n  const { preferredAnchor, preferredOrigin } = destructComputed(() => {\n    const parsedAnchor = parseAnchor(props.location, data.isRtl.value)\n    const parsedOrigin =\n      props.origin === 'overlap' ? parsedAnchor\n      : props.origin === 'auto' ? flipSide(parsedAnchor)\n      : parseAnchor(props.origin, data.isRtl.value)\n\n    // Some combinations of props may produce an invalid origin\n    if (parsedAnchor.side === parsedOrigin.side && parsedAnchor.align === flipAlign(parsedOrigin).align) {\n      return {\n        preferredAnchor: flipCorner(parsedAnchor),\n        preferredOrigin: flipCorner(parsedOrigin),\n      }\n    } else {\n      return {\n        preferredAnchor: parsedAnchor,\n        preferredOrigin: parsedOrigin,\n      }\n    }\n  })\n\n  const [minWidth, minHeight, maxWidth, maxHeight] =\n    (['minWidth', 'minHeight', 'maxWidth', 'maxHeight'] as const).map(key => {\n      return computed(() => {\n        const val = parseFloat(props[key]!)\n        return isNaN(val) ? Infinity : val\n      })\n    })\n\n  const offset = computed(() => {\n    if (Array.isArray(props.offset)) {\n      return props.offset\n    }\n    if (typeof props.offset === 'string') {\n      const offset = props.offset.split(' ').map(parseFloat)\n      if (offset.length < 2) offset.push(0)\n      return offset\n    }\n    return typeof props.offset === 'number' ? [props.offset, 0] : [0, 0]\n  })\n\n  let observe = false\n  const observer = new ResizeObserver(() => {\n    if (observe) updateLocation()\n  })\n\n  watch([data.activatorEl, data.contentEl], ([newActivatorEl, newContentEl], [oldActivatorEl, oldContentEl]) => {\n    if (oldActivatorEl) observer.unobserve(oldActivatorEl)\n    if (newActivatorEl) observer.observe(newActivatorEl)\n\n    if (oldContentEl) observer.unobserve(oldContentEl)\n    if (newContentEl) observer.observe(newContentEl)\n  }, {\n    immediate: true,\n  })\n\n  onScopeDispose(() => {\n    observer.disconnect()\n  })\n\n  // eslint-disable-next-line max-statements\n  function updateLocation () {\n    observe = false\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => observe = true)\n    })\n\n    if (!data.activatorEl.value || !data.contentEl.value) return\n\n    const targetBox = data.activatorEl.value.getBoundingClientRect()\n    const contentBox = getIntrinsicSize(data.contentEl.value)\n    const scrollParents = getScrollParents(data.contentEl.value)\n    const viewportMargin = 12\n\n    if (!scrollParents.length) {\n      scrollParents.push(document.documentElement)\n      if (!(data.contentEl.value.style.top && data.contentEl.value.style.left)) {\n        contentBox.x += parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-x') || 0)\n        contentBox.y += parseFloat(document.documentElement.style.getPropertyValue('--v-body-scroll-y') || 0)\n      }\n    }\n\n    const viewport = scrollParents.reduce<Box>((box: Box | undefined, el) => {\n      const rect = el.getBoundingClientRect()\n      const scrollBox = new Box({\n        x: el === document.documentElement ? 0 : rect.x,\n        y: el === document.documentElement ? 0 : rect.y,\n        width: el.clientWidth,\n        height: el.clientHeight,\n      })\n\n      if (box) {\n        return new Box({\n          x: Math.max(box.left, scrollBox.left),\n          y: Math.max(box.top, scrollBox.top),\n          width: Math.min(box.right, scrollBox.right) - Math.max(box.left, scrollBox.left),\n          height: Math.min(box.bottom, scrollBox.bottom) - Math.max(box.top, scrollBox.top),\n        })\n      }\n      return scrollBox\n    }, undefined!)\n    viewport.x += viewportMargin\n    viewport.y += viewportMargin\n    viewport.width -= viewportMargin * 2\n    viewport.height -= viewportMargin * 2\n\n    let placement = {\n      anchor: preferredAnchor.value,\n      origin: preferredOrigin.value,\n    }\n\n    function checkOverflow (_placement: typeof placement) {\n      const box = new Box(contentBox)\n      const targetPoint = anchorToPoint(_placement.anchor, targetBox)\n      const contentPoint = anchorToPoint(_placement.origin, box)\n\n      let { x, y } = getOffset(targetPoint, contentPoint)\n\n      switch (_placement.anchor.side) {\n        case 'top': y -= offset.value[0]; break\n        case 'bottom': y += offset.value[0]; break\n        case 'left': x -= offset.value[0]; break\n        case 'right': x += offset.value[0]; break\n      }\n\n      switch (_placement.anchor.align) {\n        case 'top': y -= offset.value[1]; break\n        case 'bottom': y += offset.value[1]; break\n        case 'left': x -= offset.value[1]; break\n        case 'right': x += offset.value[1]; break\n      }\n\n      box.x += x\n      box.y += y\n\n      box.width = Math.min(box.width, maxWidth.value)\n      box.height = Math.min(box.height, maxHeight.value)\n\n      const overflows = getOverflow(box, viewport)\n\n      return { overflows, x, y }\n    }\n\n    let x = 0; let y = 0\n    const available = { x: 0, y: 0 }\n    const flipped = { x: false, y: false }\n    let resets = -1\n    while (true) {\n      if (resets++ > 10) {\n        consoleError('Infinite loop detected in connectedLocationStrategy')\n        break\n      }\n\n      const { x: _x, y: _y, overflows } = checkOverflow(placement)\n\n      x += _x\n      y += _y\n\n      contentBox.x += _x\n      contentBox.y += _y\n\n      // flip\n      {\n        const axis = getAxis(placement.anchor)\n        const hasOverflowX = overflows.x.before || overflows.x.after\n        const hasOverflowY = overflows.y.before || overflows.y.after\n\n        let reset = false\n        ;['x', 'y'].forEach(key => {\n          if (\n            (key === 'x' && hasOverflowX && !flipped.x) ||\n            (key === 'y' && hasOverflowY && !flipped.y)\n          ) {\n            const newPlacement = { anchor: { ...placement.anchor }, origin: { ...placement.origin } }\n            const flip = key === 'x'\n              ? axis === 'y' ? flipAlign : flipSide\n              : axis === 'y' ? flipSide : flipAlign\n            newPlacement.anchor = flip(newPlacement.anchor)\n            newPlacement.origin = flip(newPlacement.origin)\n            const { overflows: newOverflows } = checkOverflow(newPlacement)\n            if (\n              (newOverflows[key].before <= overflows[key].before &&\n                newOverflows[key].after <= overflows[key].after) ||\n              (newOverflows[key].before + newOverflows[key].after <\n                (overflows[key].before + overflows[key].after) / 2)\n            ) {\n              placement = newPlacement\n              reset = flipped[key] = true\n            }\n          }\n        })\n        if (reset) continue\n      }\n\n      // shift\n      if (overflows.x.before) {\n        x += overflows.x.before\n        contentBox.x += overflows.x.before\n      }\n      if (overflows.x.after) {\n        x -= overflows.x.after\n        contentBox.x -= overflows.x.after\n      }\n      if (overflows.y.before) {\n        y += overflows.y.before\n        contentBox.y += overflows.y.before\n      }\n      if (overflows.y.after) {\n        y -= overflows.y.after\n        contentBox.y -= overflows.y.after\n      }\n\n      // size\n      {\n        const overflows = getOverflow(contentBox, viewport)\n        available.x = viewport.width - overflows.x.before - overflows.x.after\n        available.y = viewport.height - overflows.y.before - overflows.y.after\n\n        x += overflows.x.before\n        contentBox.x += overflows.x.before\n        y += overflows.y.before\n        contentBox.y += overflows.y.before\n      }\n\n      break\n    }\n\n    const axis = getAxis(placement.anchor)\n\n    Object.assign(contentStyles.value, {\n      '--v-overlay-anchor-origin': `${placement.anchor.side} ${placement.anchor.align}`,\n      transformOrigin: `${placement.origin.side} ${placement.origin.align}`,\n      // transform: `translate(${pixelRound(x)}px, ${pixelRound(y)}px)`,\n      top: convertToUnit(pixelRound(y)),\n      left: convertToUnit(pixelRound(x)),\n      minWidth: convertToUnit(axis === 'y' ? Math.min(minWidth.value, targetBox.width) : minWidth.value),\n      maxWidth: convertToUnit(pixelCeil(clamp(available.x, minWidth.value === Infinity ? 0 : minWidth.value, maxWidth.value))),\n      maxHeight: convertToUnit(pixelCeil(clamp(available.y, minHeight.value === Infinity ? 0 : minHeight.value, maxHeight.value))),\n    })\n  }\n\n  watch(\n    () => [\n      preferredAnchor.value,\n      preferredOrigin.value,\n      props.offset,\n      props.minWidth,\n      props.minHeight,\n      props.maxWidth,\n      props.maxHeight,\n    ],\n    () => updateLocation(),\n    { immediate: !activatorFixed }\n  )\n\n  if (activatorFixed) nextTick(() => updateLocation())\n  requestAnimationFrame(() => {\n    if (contentStyles.value.maxHeight) updateLocation()\n  })\n\n  return { updateLocation }\n}\n\nfunction pixelRound (val: number) {\n  return Math.round(val * devicePixelRatio) / devicePixelRatio\n}\n\nfunction pixelCeil (val: number) {\n  return Math.ceil(val * devicePixelRatio) / devicePixelRatio\n}\n", "let clean = true\nconst frames = [] as any[]\n\n/**\n * Schedule a task to run in an animation frame on its own\n * This is useful for heavy tasks that may cause jank if all ran together\n */\nexport function requestNewFrame (cb: () => void) {\n  if (!clean || frames.length) {\n    frames.push(cb)\n    run()\n  } else {\n    clean = false\n    cb()\n    run()\n  }\n}\n\nlet raf = -1\nfunction run () {\n  cancelAnimationFrame(raf)\n  raf = requestAnimationFrame(() => {\n    const frame = frames.shift()\n    if (frame) frame()\n\n    if (frames.length) run()\n    else clean = true\n  })\n}\n", "// Utilities\nimport { convertToUnit, getScrollParents, hasScrollbar, IN_BROWSER, propsFactory } from '@/util'\nimport { effectScope, nextTick, onScopeDispose, watchEffect } from 'vue'\nimport { requestNewFrame } from './requestNewFrame'\n\n// Types\nimport type { EffectScope, PropType, Ref } from 'vue'\n\nexport interface ScrollStrategyData {\n  root: Ref<HTMLElement | undefined>\n  contentEl: Ref<HTMLElement | undefined>\n  activatorEl: Ref<HTMLElement | undefined>\n  isActive: Ref<boolean>\n  updateLocation: Ref<((e: Event) => void) | undefined>\n}\n\ntype ScrollStrategyFn = (data: ScrollStrategyData, props: StrategyProps) => void\n\nconst scrollStrategies = {\n  none: null,\n  close: closeScrollStrategy,\n  block: blockScrollStrategy,\n  reposition: repositionScrollStrategy,\n}\n\nexport interface StrategyProps {\n  scrollStrategy: keyof typeof scrollStrategies | ScrollStrategyFn\n  contained: boolean | undefined\n}\n\nexport const makeScrollStrategyProps = propsFactory({\n  scrollStrategy: {\n    type: [String, Function] as PropType<StrategyProps['scrollStrategy']>,\n    default: 'block',\n    validator: (val: any) => typeof val === 'function' || val in scrollStrategies,\n  },\n}, 'v-overlay-scroll-strategies')\n\nexport function useScrollStrategies (\n  props: StrategyProps,\n  data: ScrollStrategyData\n) {\n  if (!IN_BROWSER) return\n\n  let scope: EffectScope | undefined\n  watchEffect(async () => {\n    scope?.stop()\n\n    if (!(data.isActive.value && props.scrollStrategy)) return\n\n    scope = effectScope()\n    await nextTick()\n    scope.run(() => {\n      if (typeof props.scrollStrategy === 'function') {\n        props.scrollStrategy(data, props)\n      } else {\n        scrollStrategies[props.scrollStrategy]?.(data, props)\n      }\n    })\n  })\n\n  onScopeDispose(() => {\n    scope?.stop()\n  })\n}\n\nfunction closeScrollStrategy (data: ScrollStrategyData) {\n  function onScroll (e: Event) {\n    data.isActive.value = false\n  }\n\n  bindScroll(data.activatorEl.value ?? data.contentEl.value, onScroll)\n}\n\nfunction blockScrollStrategy (data: ScrollStrategyData, props: StrategyProps) {\n  const offsetParent = data.root.value?.offsetParent\n  const scrollElements = [...new Set([\n    ...getScrollParents(data.activatorEl.value, props.contained ? offsetParent : undefined),\n    ...getScrollParents(data.contentEl.value, props.contained ? offsetParent : undefined),\n  ])].filter(el => !el.classList.contains('v-overlay-scroll-blocked'))\n  const scrollbarWidth = window.innerWidth - document.documentElement.offsetWidth\n\n  const scrollableParent = (el => hasScrollbar(el) && el)(offsetParent || document.documentElement)\n  if (scrollableParent) {\n    data.root.value!.classList.add('v-overlay--scroll-blocked')\n  }\n\n  scrollElements.forEach((el, i) => {\n    el.style.setProperty('--v-body-scroll-x', convertToUnit(-el.scrollLeft))\n    el.style.setProperty('--v-body-scroll-y', convertToUnit(-el.scrollTop))\n    el.style.setProperty('--v-scrollbar-offset', convertToUnit(scrollbarWidth))\n    el.classList.add('v-overlay-scroll-blocked')\n  })\n\n  onScopeDispose(() => {\n    scrollElements.forEach((el, i) => {\n      const x = parseFloat(el.style.getPropertyValue('--v-body-scroll-x'))\n      const y = parseFloat(el.style.getPropertyValue('--v-body-scroll-y'))\n\n      el.style.removeProperty('--v-body-scroll-x')\n      el.style.removeProperty('--v-body-scroll-y')\n      el.style.removeProperty('--v-scrollbar-offset')\n      el.classList.remove('v-overlay-scroll-blocked')\n\n      el.scrollLeft = -x\n      el.scrollTop = -y\n    })\n    if (scrollableParent) {\n      data.root.value!.classList.remove('v-overlay--scroll-blocked')\n    }\n  })\n}\n\nfunction repositionScrollStrategy (data: ScrollStrategyData) {\n  let slow = false\n  let raf = -1\n\n  function update (e: Event) {\n    requestNewFrame(() => {\n      const start = performance.now()\n      data.updateLocation.value?.(e)\n      const time = performance.now() - start\n      slow = time / (1000 / 60) > 2\n    })\n  }\n\n  bindScroll(data.activatorEl.value ?? data.contentEl.value, e => {\n    if (slow) {\n      // If the position calculation is slow,\n      // defer updates until scrolling is finished.\n      // Browsers usually fire one scroll event per frame so\n      // we just wait until we've got two frames without an event\n      cancelAnimationFrame(raf)\n      raf = requestAnimationFrame(() => {\n        raf = requestAnimationFrame(() => {\n          update(e)\n        })\n      })\n    } else {\n      update(e)\n    }\n  })\n}\n\n/** @private */\nfunction bindScroll (el: HTMLElement | undefined, onScroll: (e: Event) => void) {\n  const scrollElements = [document, ...getScrollParents(el)]\n  scrollElements.forEach(el => {\n    el.addEventListener('scroll', onScroll, { passive: true })\n  })\n\n  onScopeDispose(() => {\n    scrollElements.forEach(el => {\n      el.removeEventListener('scroll', onScroll)\n    })\n  })\n}\n", "// Utilities\nimport { getCurrentInstance, IN_BROWSER } from '@/util'\nimport { onMounted, ref } from 'vue'\n\nexport function useHydration () {\n  if (!IN_BROWSER) return ref(false)\n\n  const vm = getCurrentInstance('useHydration')\n  const rootEl = vm?.root?.appContext?.app?._container\n\n  const isMounted = ref(!!rootEl?.__vue_app__)\n\n  if (!isMounted.value) {\n    onMounted(() => isMounted.value = true)\n  }\n\n  return isMounted\n}\n", "import { useToggleScope } from '@/composables/toggleScope'\n\nimport { computed, inject, onScopeDispose, provide, reactive, readonly, ref, watchEffect } from 'vue'\nimport { getCurrentInstance } from '@/util'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\nconst StackSymbol: InjectionKey<StackProvide> = Symbol.for('vuetify:stack')\n\ninterface StackProvide {\n  activeChildren: Set<number>\n}\n\nconst globalStack = reactive<[uid: number, zIndex: number][]>([])\n\nexport function useStack (isActive: Readonly<Ref<boolean>>, zIndex: Readonly<Ref<string | number>>) {\n  const vm = getCurrentInstance('useStack')\n\n  const parent = inject(StackSymbol, undefined)\n  const stack: StackProvide = reactive({\n    activeChildren: new Set<number>(),\n  })\n  provide(StackSymbol, stack)\n\n  const _zIndex = ref(+zIndex.value)\n  useToggleScope(isActive, () => {\n    const lastZIndex = globalStack.at(-1)?.[1]\n    _zIndex.value = lastZIndex ? lastZIndex + 10 : +zIndex.value\n    globalStack.push([vm.uid, _zIndex.value])\n\n    parent?.activeChildren.add(vm.uid)\n\n    onScopeDispose(() => {\n      const idx = globalStack.findIndex(v => v[0] === vm.uid)\n      globalStack.splice(idx, 1)\n\n      parent?.activeChildren.delete(vm.uid)\n    })\n  })\n\n  const globalTop = ref(true)\n  watchEffect(() => {\n    const _isTop = globalStack.at(-1)?.[0] === vm.uid\n    setTimeout(() => globalTop.value = _isTop)\n  })\n\n  const localTop = computed(() => !stack.activeChildren.size)\n\n  return {\n    globalTop: readonly(globalTop),\n    localTop,\n    stackStyles: computed(() => ({ zIndex: _zIndex.value })),\n  }\n}\n", "// Utilities\nimport { computed, warn } from 'vue'\nimport { IN_BROWSER } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nexport function useTeleport (target: Ref<boolean | string | Element>) {\n  const teleportTarget = computed(() => {\n    const _target = target.value\n\n    if (_target === true || !IN_BROWSER) return undefined\n\n    const targetElement =\n      _target === false ? document.body\n      : typeof _target === 'string' ? document.querySelector(_target)\n      : _target\n\n    if (targetElement == null) {\n      warn(`Unable to locate target ${_target}`)\n      return undefined\n    }\n\n    if (!useTeleport.cache.has(targetElement)) {\n      const el = document.createElement('div')\n      el.className = 'v-overlay-container'\n      targetElement.appendChild(el)\n      useTeleport.cache.set(targetElement, el)\n    }\n\n    return useTeleport.cache.get(targetElement)\n  })\n\n  return { teleportTarget }\n}\nuseTeleport.cache = new WeakMap<Element, Element>()\n", "import { attachedRoot } from '@/util'\nimport type { DirectiveBinding } from 'vue'\n\ninterface ClickOutsideBindingArgs {\n  handler: (e: MouseEvent) => void\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirectiveBinding extends DirectiveBinding {\n  value: ((e: MouseEvent) => void) | ClickOutsideBindingArgs\n}\n\nfunction defaultConditional () {\n  return true\n}\n\nfunction checkEvent (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding): boolean {\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || checkIsActive(e, binding) === false) return false\n\n  // If we're clicking inside the shadowroot, then the app root doesn't get the same\n  // level of introspection as to _what_ we're clicking. We want to check to see if\n  // our target is the shadowroot parent container, and if it is, ignore.\n  const root = attachedRoot(el)\n  if (\n    typeof ShadowRoot !== 'undefined' &&\n    root instanceof ShadowRoot &&\n    root.host === e.target\n  ) return false\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = ((typeof binding.value === 'object' && binding.value.include) || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  return !elements.some(el => el?.contains(e.target as Node))\n}\n\nfunction checkIsActive (e: MouseEvent, binding: ClickOutsideDirectiveBinding): boolean | void {\n  const isActive = (typeof binding.value === 'object' && binding.value.closeConditional) || defaultConditional\n\n  return isActive(e)\n}\n\nfunction directive (e: MouseEvent, el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n  const handler = typeof binding.value === 'function' ? binding.value : binding.value.handler\n\n  el._clickOutside!.lastMousedownWasOutside && checkEvent(e, el, binding) && setTimeout(() => {\n    checkIsActive(e, binding) && handler && handler(e)\n  }, 0)\n}\n\nfunction handleShadow (el: HTMLElement, callback: Function): void {\n  const root = attachedRoot(el)\n\n  callback(document)\n\n  if (typeof ShadowRoot !== 'undefined' && root instanceof ShadowRoot) {\n    callback(root)\n  }\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  mounted (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    const onClick = (e: Event) => directive(e as MouseEvent, el, binding)\n    const onMousedown = (e: Event) => {\n      el._clickOutside!.lastMousedownWasOutside = checkEvent(e as MouseEvent, el, binding)\n    }\n\n    handleShadow(el, (app: HTMLElement) => {\n      app.addEventListener('click', onClick, true)\n      app.addEventListener('mousedown', onMousedown, true)\n    })\n\n    if (!el._clickOutside) {\n      el._clickOutside = {\n        lastMousedownWasOutside: true,\n      }\n    }\n\n    el._clickOutside[binding.instance!.$.uid] = {\n      onClick,\n      onMousedown,\n    }\n  },\n\n  unmounted (el: HTMLElement, binding: ClickOutsideDirectiveBinding) {\n    if (!el._clickOutside) return\n\n    handleShadow(el, (app: HTMLElement) => {\n      if (!app || !el._clickOutside?.[binding.instance!.$.uid]) return\n\n      const { onClick, onMousedown } = el._clickOutside[binding.instance!.$.uid]!\n\n      app.removeEventListener('click', onClick, true)\n      app.removeEventListener('mousedown', onMousedown, true)\n    })\n\n    delete el._clickOutside[binding.instance!.$.uid]\n  },\n}\n\nexport default ClickOutside\n", "import type { ComponentPublicInstance, Ref, UnwrapRef } from 'vue'\nimport type { UnionToIntersection } from '@/util'\n\nconst Refs = Symbol('Forwarded refs')\n\n/** Omit properties starting with P */\ntype OmitPrefix<T, P extends string> = [Extract<keyof T, `${P}${any}`>] extends [never] ? T : Omit<T, `${P}${any}`>\n\ntype OmitProps<T> = T extends { $props: any } ? Omit<T, keyof T['$props']> : never\n\nexport function forwardRefs<T extends {}, U extends Ref<HTMLElement | Omit<ComponentPublicInstance, '$emit'> | undefined>[]> (\n  target: T,\n  ...refs: U\n): T & UnionToIntersection<{ [K in keyof U]: OmitPrefix<OmitProps<NonNullable<UnwrapRef<U[K]>>>, '$'> }[number]> {\n  (target as any)[Refs] = refs\n\n  return new Proxy(target, {\n    get (target, key) {\n      if (Reflect.has(target, key)) {\n        return Reflect.get(target, key)\n      }\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          const val = Reflect.get(ref.value, key)\n          return typeof val === 'function'\n            ? val.bind(ref.value)\n            : val\n        }\n      }\n    },\n    getOwnPropertyDescriptor (target, key) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key)\n      if (descriptor) return descriptor\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('__')) return\n\n      // Check each ref's own properties\n      for (const ref of refs) {\n        if (!ref.value) continue\n        const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key)\n        if (descriptor) return descriptor\n        if ('_' in ref.value && 'setupState' in ref.value._) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value._.setupState, key)\n          if (descriptor) return descriptor\n        }\n      }\n      // Recursive search up each ref's prototype\n      for (const ref of refs) {\n        let obj = ref.value && Object.getPrototypeOf(ref.value)\n        while (obj) {\n          const descriptor = Reflect.getOwnPropertyDescriptor(obj, key)\n          if (descriptor) return descriptor\n          obj = Object.getPrototypeOf(obj)\n        }\n      }\n      // Call forwarded refs' proxies\n      for (const ref of refs) {\n        const childRefs = ref.value && (ref.value as any)[Refs]\n        if (!childRefs) continue\n        const queue = childRefs.slice()\n        while (queue.length) {\n          const ref = queue.shift()\n          const descriptor = Reflect.getOwnPropertyDescriptor(ref.value, key)\n          if (descriptor) return descriptor\n          const childRefs = ref.value && (ref.value as any)[Refs]\n          if (childRefs) queue.push(...childRefs)\n        }\n      }\n      return undefined\n    },\n  }) as any\n}\n", "import { getCurrentInstance } from '@/util'\n\nexport function useScopeId () {\n  const vm = getCurrentInstance('useScopeId')\n\n  const scopeId = vm!.vnode.scopeId\n\n  return { scopeId: scopeId ? { [scopeId]: '' } : undefined }\n}\n"],
  "mappings": "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",
  "names": ["makeDelayProps", "propsFactory", "closeDelay", "Number", "String", "openDelay", "useDelay", "props", "cb", "delays", "runDelayFactory", "prop", "IN_BROWSER", "Promise", "resolve", "active", "window", "clearTimeout", "delay", "parseInt", "setTimeout", "runCloseDelay", "runOpenDelay", "VMenuSymbol", "Symbol", "for", "makeActivatorProps", "propsFactory", "activator", "String", "Object", "activatorProps", "type", "default", "openOnClick", "Boolean", "undefined", "openOnHover", "openOnFocus", "closeOnContentClick", "makeDelayProps", "useActivator", "props", "isActive", "isTop", "activatorEl", "ref", "isHovered", "isFocused", "firstEnter", "computed", "value", "runOpenDelay", "runCloseDelay", "useDelay", "availableEvents", "click", "e", "stopPropagation", "currentTarget", "target", "mouseenter", "mouseleave", "focus", "SUPPORTS_FOCUS_VISIBLE", "matches", "blur", "activatorEvents", "events", "contentEvents", "menu", "inject", "VMenuSymbol", "closeParents", "scrimEvents", "watch", "val", "activatorRef", "watchEffect", "nextTick", "isComponentInstance", "$el", "vm", "getCurrentInstance", "scope", "IN_BROWSER", "effectScope", "run", "_useActivator", "stop", "flush", "immediate", "onScopeDispose", "oldVal", "getActivator", "unbindActivatorProps", "bindActivatorProps", "el", "_props", "entries", "forEach", "name", "cb", "addEventListener", "keys", "k", "removeAttribute", "setAttribute", "removeEventListener", "selector", "proxy", "parentNode", "hasAttribute", "document", "querySelector", "nodeType", "Node", "ELEMENT_NODE", "makeLazyProps", "propsFactory", "eager", "Boolean", "useLazy", "props", "active", "isBooted", "ref", "hasContent", "computed", "value", "watch", "onAfterLeave", "elementToViewport", "point", "offset", "x", "y", "getOffset", "a", "b", "x", "y", "anchorToPoint", "anchor", "box", "side", "align", "width", "height", "elementToViewport", "locationStrategies", "static", "staticLocationStrategy", "connected", "connectedLocationStrategy", "makeLocationStrategyProps", "propsFactory", "locationStrategy", "type", "String", "Function", "default", "validator", "val", "location", "origin", "offset", "Number", "Array", "useLocationStrategies", "props", "data", "contentStyles", "ref", "updateLocation", "scope", "watchEffect", "stop", "value", "undefined", "IN_BROWSER", "isActive", "effectScope", "nextTick", "run", "window", "addEventListener", "onResize", "passive", "onScopeDispose", "removeEventListener", "e", "getIntrinsicSize", "el", "contentBox", "nullifyTransforms", "x", "parseFloat", "style", "left", "y", "top", "activatorFixed", "isFixedPosition", "activatorEl", "Object", "assign", "position", "preferredAnchor", "preferredOrigin", "destructComputed", "parsedAnchor", "parseAnchor", "isRtl", "parsedOrigin", "flipSide", "side", "align", "flipAlign", "flipCorner", "minWidth", "minHeight", "maxWidth", "maxHeight", "map", "key", "computed", "isNaN", "Infinity", "isArray", "split", "length", "push", "observe", "observer", "ResizeObserver", "watch", "contentEl", "newActivatorEl", "newContentEl", "oldActivatorEl", "oldContentEl", "unobserve", "immediate", "disconnect", "requestAnimationFrame", "targetBox", "getBoundingClientRect", "scrollParents", "getScrollParents", "viewportMargin", "document", "documentElement", "getPropertyValue", "viewport", "reduce", "box", "rect", "scrollBox", "Box", "width", "clientWidth", "height", "clientHeight", "Math", "max", "min", "right", "bottom", "placement", "anchor", "checkOverflow", "_placement", "targetPoint", "anchorToPoint", "contentPoint", "getOffset", "overflows", "getOverflow", "available", "flipped", "resets", "consoleError", "_x", "_y", "axis", "getAxis", "hasOverflowX", "before", "after", "hasOverflowY", "reset", "forEach", "newPlacement", "flip", "newOverflows", "transformOrigin", "convertToUnit", "pixelRound", "pixelCeil", "clamp", "round", "devicePixelRatio", "ceil", "clean", "frames", "requestNewFrame", "cb", "length", "push", "run", "raf", "cancelAnimationFrame", "requestAnimationFrame", "frame", "shift", "scrollStrategies", "none", "close", "closeScrollStrategy", "block", "blockScrollStrategy", "reposition", "repositionScrollStrategy", "makeScrollStrategyProps", "propsFactory", "scrollStrategy", "type", "String", "Function", "default", "validator", "val", "useScrollStrategies", "props", "data", "IN_BROWSER", "scope", "watchEffect", "stop", "isActive", "value", "effectScope", "nextTick", "run", "onScopeDispose", "onScroll", "e", "bindScroll", "activatorEl", "contentEl", "offsetParent", "root", "scrollElements", "Set", "getScrollParents", "contained", "undefined", "filter", "el", "classList", "contains", "scrollbarWidth", "window", "innerWidth", "document", "documentElement", "offsetWidth", "scrollableParent", "hasScrollbar", "add", "forEach", "i", "style", "setProperty", "convertToUnit", "scrollLeft", "scrollTop", "x", "parseFloat", "getPropertyValue", "y", "removeProperty", "remove", "slow", "raf", "update", "requestNewFrame", "start", "performance", "now", "updateLocation", "time", "cancelAnimationFrame", "requestAnimationFrame", "addEventListener", "passive", "removeEventListener", "useHydration", "IN_BROWSER", "ref", "vm", "getCurrentInstance", "rootEl", "root", "appContext", "app", "_container", "isMounted", "__vue_app__", "value", "onMounted", "StackSymbol", "Symbol", "for", "globalStack", "reactive", "useStack", "isActive", "zIndex", "vm", "getCurrentInstance", "parent", "inject", "undefined", "stack", "activeChildren", "Set", "provide", "_zIndex", "ref", "value", "useToggleScope", "lastZIndex", "at", "push", "uid", "add", "onScopeDispose", "idx", "findIndex", "v", "splice", "delete", "globalTop", "watchEffect", "_isTop", "setTimeout", "localTop", "computed", "size", "readonly", "stackStyles", "useTeleport", "target", "teleportTarget", "computed", "_target", "value", "IN_BROWSER", "undefined", "targetElement", "document", "body", "querySelector", "warn", "cache", "has", "el", "createElement", "className", "appendChild", "set", "get", "WeakMap", "defaultConditional", "checkEvent", "e", "el", "binding", "checkIsActive", "root", "attachedRoot", "ShadowRoot", "host", "target", "elements", "value", "include", "push", "some", "contains", "isActive", "closeConditional", "directive", "handler", "_clickOutside", "lastMousedownWasOutside", "setTimeout", "handleShadow", "callback", "document", "ClickOutside", "mounted", "onClick", "onMousedown", "app", "addEventListener", "instance", "$", "uid", "unmounted", "removeEventListener", "Scrim", "props", "modelValue", "color", "rest", "backgroundColorClasses", "value", "backgroundColorStyles", "makeVOverlayProps", "propsFactory", "absolute", "Boolean", "attach", "String", "Object", "closeOnBack", "type", "default", "contained", "contentClass", "contentProps", "disabled", "noClickAnimation", "persistent", "scrim", "zIndex", "Number", "makeActivatorProps", "makeDimensionProps", "makeLazyProps", "makeLocationStrategyProps", "makeScrollStrategyProps", "makeThemeProps", "makeTransitionProps", "VOverlay", "genericComponent", "name", "directives", "ClickOutside", "inheritAttrs", "emits", "e", "afterLeave", "setup", "slots", "attrs", "emit", "model", "useProxiedModel", "isActive", "computed", "get", "set", "v", "teleportTarget", "useTeleport", "themeClasses", "provideTheme", "rtlClasses", "isRtl", "useRtl", "hasContent", "onAfterLeave", "useLazy", "scrimColor", "useBackgroundColor", "globalTop", "localTop", "stackStyles", "useStack", "toRef", "activatorEl", "activatorRef", "activatorEvents", "contentEvents", "scrimEvents", "useActivator", "isTop", "dimensionStyles", "useDimension", "isMounted", "useHydration", "watch", "root", "ref", "contentEl", "contentStyles", "updateLocation", "useLocationStrategies", "useScrollStrategies", "onClickOutside", "animateClick", "closeConditional", "IN_BROWSER", "val", "window", "addEventListener", "onKeydown", "removeEventListener", "immediate", "key", "router", "useRouter", "useToggleScope", "useBackButton", "next", "top", "scrollParent", "getScrollParent", "document", "scrollingElement", "scrollTop", "animate", "transformOrigin", "transform", "duration", "easing", "standardEasing", "useRender", "activator", "mergeProps", "toHandlers", "activatorProps", "convertToUnit", "transition", "handler", "include", "filterVOverlayProps", "pick", "keys", "Refs", "Symbol", "forwardRefs", "target", "refs", "Proxy", "get", "key", "Reflect", "has", "ref", "value", "val", "bind", "getOwnPropertyDescriptor", "descriptor", "startsWith", "_", "setupState", "obj", "Object", "getPrototypeOf", "childRefs", "queue", "slice", "length", "shift", "push", "undefined", "useScopeId", "vm", "getCurrentInstance", "scopeId", "vnode", "undefined", "VMenu", "genericComponent", "name", "props", "id", "String", "omit", "makeVOverlayProps", "closeDelay", "closeOnContentClick", "locationStrategy", "openDelay", "scrim", "scrollStrategy", "transition", "component", "VDialogTransition", "emits", "value", "setup", "slots", "isActive", "useProxiedModel", "scopeId", "useScopeId", "uid", "getUid", "computed", "overlay", "ref", "parent", "inject", "VMenuSymbol", "openChildren", "provide", "register", "unregister", "closeParents", "setTimeout", "watch", "val", "onClickOutside", "useRender", "overlayProps", "filterVOverlayProps", "mergeProps", "activatorProps", "activator", "default", "args", "forwardRefs"]
}
